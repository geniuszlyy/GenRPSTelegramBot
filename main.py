import telebot
from telebot import types
import random
import json
import os

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
config_file_path = 'config.json'
if not os.path.exists(config_file_path):
    raise FileNotFoundError(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª '{config_file_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞
with open(config_file_path, 'r') as config_file:
    config = json.load(config_file)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
TOKEN = config.get('Telegram', {}).get('Token')
if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ.")

bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_stats = {}

def initialize_user_stats(user_id):
    if user_id not in user_stats:
        user_stats[user_id] = {
            'wins': 0,
            'losses': 0,
            'draws': 0,
            'choices': {'ü™® –ö–∞–º–µ–Ω—å': 0, '‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã': 0, 'üìÑ –ë—É–º–∞–≥–∞': 0}
        }

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä—ã
def send_welcome(message):
    keyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    keyboard.add(
        types.KeyboardButton('–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å'),
        types.KeyboardButton('üìä –ü—Ä–æ—Ñ–∏–ª—å'),
        types.KeyboardButton('‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'),
        types.KeyboardButton('üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    )
    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /profile
@bot.message_handler(commands=['profile'])

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def send_profile_command(message):
    send_profile(message.chat.id)

# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def send_profile(user_id):
    initialize_user_stats(user_id)
    stats = user_stats[user_id]
    profile_message = (
        f"üìä –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
        f"–ü–æ–±–µ–¥—ã: {stats['wins']}\n"
        f"–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {stats['losses']}\n"
        f"–ù–∏—á—å–∏: {stats['draws']}\n"
        f"–í—ã–±–æ—Ä—ã: –ö–∞–º–µ–Ω—å - {stats['choices']['ü™® –ö–∞–º–µ–Ω—å']}, –ù–æ–∂–Ω–∏—Ü—ã - {stats['choices']['‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã']}, –ë—É–º–∞–≥–∞ - {stats['choices']['üìÑ –ë—É–º–∞–≥–∞']}"
    )
    bot.send_message(user_id, profile_message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: call.data in ['ü™® –ö–∞–º–µ–Ω—å', '‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã', 'üìÑ –ë—É–º–∞–≥–∞'])

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏–≥—Ä—ã
def handle_game_choice(call):
    user_id = call.message.chat.id
    user_choice = call.data
    bot_choice = random.choice(['ü™® –ö–∞–º–µ–Ω—å', '‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã', 'üìÑ –ë—É–º–∞–≥–∞'])

    initialize_user_stats(user_id)
    user_stats[user_id]['choices'][user_choice] += 1

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã
    if user_choice == bot_choice:
        user_stats[user_id]['draws'] += 1
        response = f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è –≤—ã–±—Ä–∞–ª {bot_choice}. –ù–∏—á—å—è!"
    elif (user_choice == 'ü™® –ö–∞–º–µ–Ω—å' and bot_choice == '‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã') or \
         (user_choice == '‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã' and bot_choice == 'üìÑ –ë—É–º–∞–≥–∞') or \
         (user_choice == 'üìÑ –ë—É–º–∞–≥–∞' and bot_choice == 'ü™® –ö–∞–º–µ–Ω—å'):
        user_stats[user_id]['wins'] += 1
        response = f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è –≤—ã–±—Ä–∞–ª {bot_choice}. –í—ã –ø–æ–±–µ–¥–∏–ª–∏! üéâ"
    else:
        user_stats[user_id]['losses'] += 1
        response = f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {user_choice}, –∞ —è –≤—ã–±—Ä–∞–ª {bot_choice}. –Ø –ø–æ–±–µ–¥–∏–ª! üòÑ"

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞
    inline_keyboard = types.InlineKeyboardMarkup()
    inline_keyboard.add(
        types.InlineKeyboardButton('ü™® –ö–∞–º–µ–Ω—å', callback_data='ü™® –ö–∞–º–µ–Ω—å'),
        types.InlineKeyboardButton('‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã', callback_data='‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã'),
        types.InlineKeyboardButton('üìÑ –ë—É–º–∞–≥–∞', callback_data='üìÑ –ë—É–º–∞–≥–∞')
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –Ω–æ–≤—ã–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=response,
        reply_markup=inline_keyboard
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda msg: True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏–≥—Ä—ã
def handle_text(message):
    user_id = message.chat.id
    initialize_user_stats(user_id)
    user_choice = message.text

    if user_choice == 'üìä –ü—Ä–æ—Ñ–∏–ª—å':
        send_profile(user_id)
        return
    elif user_choice == '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        send_info(user_id)
        return
    elif user_choice == 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        send_support(user_id)
        return
    elif user_choice == '–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å':
        start_game(user_id)
        return

    bot.send_message(
        message.chat.id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–∏."
    )

# –ù–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É, –æ—Ç–ø—Ä–∞–≤–ª—è—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
def start_game(user_id):
    inline_keyboard = types.InlineKeyboardMarkup()
    inline_keyboard.add(
        types.InlineKeyboardButton('ü™® –ö–∞–º–µ–Ω—å', callback_data='ü™® –ö–∞–º–µ–Ω—å'),
        types.InlineKeyboardButton('‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã', callback_data='‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã'),
        types.InlineKeyboardButton('üìÑ –ë—É–º–∞–≥–∞', callback_data='üìÑ –ë—É–º–∞–≥–∞')
    )
    bot.send_message(
        user_id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:",
        reply_markup=inline_keyboard
    )

# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å
def send_info(user_id):
    info_message = (
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–≥—Ä–µ:\n"
        "–ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞.\n"
        "–ü—Ä–∞–≤–∏–ª–∞:\n"
        "1. –ö–∞–º–µ–Ω—å –ø–æ–±–µ–∂–¥–∞–µ—Ç –ù–æ–∂–Ω–∏—Ü—ã\n"
        "2. –ù–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –ë—É–º–∞–≥—É\n"
        "3. –ë—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –ö–∞–º–µ–Ω—å\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —á—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å."
    )
    bot.send_message(user_id, info_message)

# –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
def send_support(user_id):
    support_message = "–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ –º–æ–π –ø—Ä–æ—Ñ–∏–ª—å GitHub: https://github.com/geniuszly"
    bot.send_message(user_id, support_message, disable_web_page_preview=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
